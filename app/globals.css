@import "tailwindcss";

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --background: #ffffff;
  --foreground: #171717;
  --primary: #10b981;
  --primary-foreground: #f0fdf4;
  --secondary: #0ea5e9;
  --secondary-foreground: #f0f9ff;
  --accent: #6366f1;
  --accent-foreground: #eef2ff;
  --font-cairo: var(--font-cairo);
}

/* Dark mode variables */
@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
    --background: #0a0a0a;
    --foreground: #ededed;
    --primary: #10b981;
    --primary-foreground: #f0fdf4;
    --secondary: #0ea5e9;
    --secondary-foreground: #f0f9ff;
    --accent: #818cf8;
    --accent-foreground: #eef2ff;
  }
}

/* Manual theme switching support */
.dark-theme {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 17, 24, 39;
  --background-end-rgb: 3, 7, 18;
  --background: #0a0a0a;
  --foreground: #ededed;
  --primary: #10b981;
  --primary-foreground: #f0fdf4;
  --secondary: #0ea5e9;
  --secondary-foreground: #f0f9ff;
  --accent: #818cf8;
  --accent-foreground: #eef2ff;
}

.light-theme {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 240, 245, 250;
  --background-end-rgb: 255, 255, 255;
  --background: #ffffff;
  --foreground: #171717;
  --primary: #10b981;
  --primary-foreground: #f0fdf4;
  --secondary: #0ea5e9;
  --secondary-foreground: #f0f9ff;
  --accent: #6366f1;
  --accent-foreground: #eef2ff;
}

/* Base styles */
body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
    to bottom,
    rgb(var(--background-start-rgb)),
    rgb(var(--background-end-rgb))
  );
  direction: rtl;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
}

/* Background patterns */
.bg-dots-pattern {
  background-image: radial-gradient(rgba(128, 128, 128, 0.1) 1px, transparent 0);
  background-size: 25px 25px;
}

.bg-glow-pattern {
  background-image: radial-gradient(ellipse at top, rgba(16, 185, 129, 0.1), transparent 50%),
                   radial-gradient(ellipse at bottom, rgba(14, 165, 233, 0.1), transparent 50%);
}

/* Floating animations */
.floating-shape {
  position: absolute;
  border-radius: 50%;
  filter: blur(80px);
  z-index: 0;
  animation: float 15s ease-in-out infinite;
}

@keyframes float {
  0% { transform: translateY(0px) translateX(0px); }
  50% { transform: translateY(-20px) translateX(20px); }
  100% { transform: translateY(0px) translateX(0px); }
}

/* PDF Viewer specific styles */
.pdf-container {
  transition: transform 0.3s ease-out;
}

.react-pdf__Document {
  transition: transform 0.3s ease-out;
}

.react-pdf__Page {
  margin: 1rem;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  background-color: white;
}

.react-pdf__Page canvas {
  display: block;
  user-select: none;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.1);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background: rgba(16, 185, 129, 0.6);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(16, 185, 129, 0.8);
}

/* Drawing canvas */
#drawing-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
  pointer-events: all;
}

/* Tool effect transitions */
.tool-transition {
  transition: all 0.2s ease-in-out;
}

.tool-transition:hover {
  transform: translateY(-2px);
}

/* Button pulse effect for important actions */
.pulse-effect {
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(16, 185, 129, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(16, 185, 129, 0);
  }
}

/* Tooltip styles */
.tooltip {
  position: relative;
}

.tooltip:before {
  content: attr(data-tooltip);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  padding: 5px 10px;
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  border-radius: 4px;
  white-space: nowrap;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s, visibility 0.3s;
}

.tooltip:hover:before {
  opacity: 1;
  visibility: visible;
}

/* Color picker styles */
.color-picker-option {
  transition: transform 0.2s;
}

.color-picker-option:hover {
  transform: scale(1.2);
}

/* Loading spinner */
.loading-spinner {
  display: inline-block;
  width: 40px;
  height: 40px;
  border: 3px solid rgba(16, 185, 129, 0.3);
  border-radius: 50%;
  border-top-color: rgba(16, 185, 129, 1);
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root:not([data-theme]) {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

.bg-grid-pattern {
  background-image: 
    linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  background-size: 30px 30px;
}

/* Enhanced backgrounds */
.bg-dots-pattern {
  background-image: radial-gradient(rgba(255, 255, 255, 0.08) 1px, transparent 1px);
  background-size: 20px 20px;
}

.bg-glow-pattern {
  background-image: 
    radial-gradient(circle at 25% 25%, rgba(16, 185, 129, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, rgba(14, 165, 233, 0.1) 0%, transparent 50%);
}

.dark-theme {
  @apply bg-gradient-to-br from-gray-900 via-slate-900 to-gray-950;
}

.light-theme {
  @apply bg-gradient-to-br from-gray-100 via-white to-gray-50;
}

/* Floating shapes */
.floating-shape {
  position: absolute;
  border-radius: 50%;
  opacity: 0.1;
  filter: blur(40px);
  z-index: 0;
  animation: float 20s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0) translateX(0); }
  25% { transform: translateY(-20px) translateX(10px); }
  50% { transform: translateY(10px) translateX(-15px); }
  75% { transform: translateY(-15px) translateX(-10px); }
}